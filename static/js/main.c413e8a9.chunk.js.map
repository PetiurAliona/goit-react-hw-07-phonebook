{"version":3,"sources":["components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactsList/ContactsList.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactsList/ContactsList.module.css"],"names":["module","exports","actions","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","connect","dispatch","onSubmit","useState","setName","setNumber","className","styled","contactForm","e","preventDefault","type","value","pattern","title","required","onChange","currentTarget","input","button","state","contacts","filter","target","items","normalizedFilter","toLowerCase","contact","includes","onDeleteContact","map","item","text","onClick","App","createReducer","isContact","some","alert","findName","_","combineReducers","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,wB,+ICiBXC,EAFC,CAAEC,WAZCC,YAAa,gBAAgB,SAACC,EAAMC,GAAP,MAAmB,CACjEC,QAAS,CACPC,GAAIC,cACJJ,OACAC,cAQ0BI,cAJRN,YAAa,mBAIUO,aAFxBP,YAAa,0B,OCuDnBQ,cAAQ,MAJI,SAACC,GAAD,MAAe,CACxCC,SAAU,SAACT,EAAMC,GAAP,OAAkBO,EAASX,EAAQC,WAAWE,EAAMC,QAGjDM,EA/DK,SAAC,GAAkB,IAAhBE,EAAe,EAAfA,SACrB,EAAwBC,mBAAS,IAAjC,mBAAOV,EAAP,KAAaW,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOT,EAAP,KAAeW,EAAf,KAiBA,OACE,uBAAMC,UAAWC,IAAOC,YAAaN,SARlB,SAACO,GACpBA,EAAEC,iBACFR,EAAST,EAAMC,GACfU,EAAQ,IACRC,EAAU,KAIV,UACE,yCAEE,uBACEM,KAAK,OACLlB,KAAK,OACLmB,MAAOnB,EACPoB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SA1BiB,SAACP,GACxBL,EAAQK,EAAEQ,cAAcL,QA0BlBN,UAAWC,IAAOW,WAGtB,2CAEE,uBACEP,KAAK,MACLlB,KAAK,SACLmB,MAAOlB,EACPmB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAnCmB,SAACP,GAC1BJ,EAAUI,EAAEQ,cAAcL,QAmCpBN,UAAWC,IAAOW,WAGtB,wBAAQP,KAAK,SAASL,UAAWC,IAAOY,OAAxC,+B,iBC5BSnB,eARS,SAACoB,GAAD,MAAY,CAClCR,MAAOQ,EAAMC,SAASC,WAGG,SAACrB,GAAD,MAAe,CACxCe,SAAU,SAACP,GAAD,OAAOR,EAASX,EAAQS,aAAaU,EAAEc,OAAOX,YAG3CZ,EApBA,SAAC,GAAD,IAAGY,EAAH,EAAGA,MAAOI,EAAV,EAAUA,SAAV,OACb,0DAEE,uBAAOJ,MAAOA,EAAOI,SAAUA,EAAUvB,KAAK,SAASkB,KAAK,OAAOL,UAAWC,IAAOW,c,gBCgC1ElB,eAdS,SAACoB,GACvB,MAA0BA,EAAMC,SAAxBC,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,MACVC,EAAmBH,EAAOI,cAGhC,MAAO,CACLL,SAHoB,OAAGG,QAAH,IAAGA,OAAH,EAAGA,EAAOF,QAAO,SAACK,GAAD,OAAaA,EAAQlC,KAAKiC,cAAcE,SAASH,UAO/D,SAACxB,GAAD,MAAe,CACxC4B,gBAAiB,SAACjC,GAAD,OAAQK,EAASX,EAAQQ,cAAcF,QAG3CI,EAnCM,SAAC,GAAmC,IAAjCqB,EAAgC,EAAhCA,SAAUQ,EAAsB,EAAtBA,gBAChC,OACE,oCACGR,QADH,IACGA,OADH,EACGA,EAAUS,KAAI,gBAAGlC,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACb,qBAAIY,UAAWC,IAAOwB,KAAtB,UACE,oBAAGzB,UAAWC,IAAOyB,KAArB,UAA4BvC,EAA5B,OACA,mBAAGa,UAAWC,IAAOyB,KAArB,SAA4BtC,IAC5B,wBAAQY,UAAWC,IAAOY,OAAQc,QAAS,kBAAMJ,EAAgBjC,IAAjE,sBAH+BA,WCO1BsC,EAZH,WACV,OACE,qCACE,2CACA,cAAC,EAAD,IACA,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,uBCDAV,EAAQW,YAAc,IAAD,mBACxB7C,EAAQC,YAAa,SAAC6B,EAAD,UAPP,SAAUC,EAAU1B,GACnC,IAAMyC,EAAYf,EAASgB,MAAK,SAACN,GAAD,OAAUA,EAAKtC,OAASE,EAAQF,QAEhE,OADA2C,GAAaE,MAAM,GAAD,OAAI3C,EAAQF,KAAZ,4BACV2C,EAAqCf,EAAtC,sBAAiBA,GAAjB,CAA2B1B,IAIY4C,CAASnB,EAAjC,EAAUzB,YADP,cAExBL,EAAQQ,eAAgB,SAACsB,EAAD,OAAUzB,EAAV,EAAUA,QAAV,OAAwByB,EAAME,QAAO,qBAAG1B,KAAgBD,QAFxD,IAKrB2B,EAASa,YAAc,GAAD,eACzB7C,EAAQS,cAAe,SAACyC,EAAD,YAAM7C,YAGjB8C,cAAgB,CAC7BjB,QACAF,WCXaoB,EAPDC,YAAe,CAC3BC,QAAS,CACPvB,SAAUwB,GAEZC,UAAUC,ICCZC,IAASC,OACP,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFQ,SAASC,eAAe,U,kBCX1B/D,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,2BAA2B,OAAS,8B,kBCA7GD,EAAOC,QAAU,CAAC,OAAS,6BAA6B,KAAO,2BAA2B,KAAO,8B","file":"static/js/main.c413e8a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__UHWo2\"};","import { createAction } from \"@reduxjs/toolkit\"\r\n\r\nimport { v4 as uuidv4 } from \"uuid\"\r\n\r\nconst addContact = createAction(\"contacts/add\", (name, number) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}))\r\n\r\nconst deleteContact = createAction(\"contacts/delete\")\r\n\r\nconst changeFilter = createAction(\"contacts/changeFilter\")\r\n\r\nconst actions = { addContact, deleteContact, changeFilter }\r\n\r\nexport default actions\r\n","import React, { useState } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"./ContactForm.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport actions from \"../../redux/contacts/contacts-actions\"\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n  const [name, setName] = useState(\"\")\r\n  const [number, setNumber] = useState(\"\")\r\n\r\n  const handleChangeName = (e) => {\r\n    setName(e.currentTarget.value)\r\n  }\r\n\r\n  const handleChangeNumber = (e) => {\r\n    setNumber(e.currentTarget.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    onSubmit(name, number)\r\n    setName(\"\")\r\n    setNumber(\"\")\r\n  }\r\n\r\n  return (\r\n    <form className={styled.contactForm} onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChangeName}\r\n          className={styled.input}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChangeNumber}\r\n          className={styled.input}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={styled.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (name, number) => dispatch(actions.addContact(name, number)),\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm)\r\n","import PropTypes from \"prop-types\"\r\nimport styled from \"./Filter.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport actions from \"../../redux/contacts/contacts-actions\"\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <input value={value} onChange={onChange} name=\"filter\" type=\"text\" className={styled.input}></input>\r\n  </label>\r\n)\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => dispatch(actions.changeFilter(e.target.value)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)\r\n","import PropTypes from \"prop-types\"\r\nimport styled from \"./ContactsList.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport actions from \"../../redux/contacts/contacts-actions\"\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts?.map(({ id, name, number }) => (\r\n        <li className={styled.item} key={id}>\r\n          <p className={styled.text}>{name}:</p>\r\n          <p className={styled.text}>{number}</p>\r\n          <button className={styled.button} onClick={() => onDeleteContact(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  remove: PropTypes.func,\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { filter, items } = state.contacts\r\n  const normalizedFilter = filter.toLowerCase()\r\n  const existingContacts = items?.filter((contact) => contact.name.toLowerCase().includes(normalizedFilter))\r\n\r\n  return {\r\n    contacts: existingContacts,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (id) => dispatch(actions.deleteContact(id)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList)\r\n","import ContactForm from \"./components/ContactForm/ContactForm\"\nimport Filter from \"./components/Filter/Filter\"\nimport ContactsList from \"./components/ContactsList/ContactsList\"\n\nconst App = () => {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </>\n  )\n}\n\nexport default App\n","import { createReducer } from \"@reduxjs/toolkit\"\r\nimport { combineReducers } from \"redux\"\r\nimport actions from \"./contacts-actions\"\r\n\r\nconst findName = function (contacts, payload) {\r\n  const isContact = contacts.some((item) => item.name === payload.name)\r\n  isContact && alert(`${payload.name} is already in contacts`)\r\n  return !isContact ? [...contacts, payload] : contacts\r\n}\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => findName(state, payload),\r\n  [actions.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n})\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n})\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n})\r\n","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport contactsReducer from \"./contacts/contacts-reducer\"\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n})\r\n\r\nexport default store\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\n\nimport \"./index.css\"\nimport App from \"./App\"\nimport store from \"../src/redux/store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__xGRFs\",\"input\":\"ContactForm_input__3yj31\",\"button\":\"ContactForm_button__uz7_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactsList_button__-U71z\",\"item\":\"ContactsList_item__2smm4\",\"text\":\"ContactsList_text__Ljot2\"};"],"sourceRoot":""}