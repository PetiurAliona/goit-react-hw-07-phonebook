{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","components/Loader/Loader.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","redux/contacts/contacts-selectors.js","components/ContactsList/ContactsList.js","components/Loader/Loader.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","addContactsRequest","createAction","addContactsSuccess","addContactsError","getContactsRequest","getContactsSuccess","getContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","changeFilter","axios","defaults","baseURL","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","className","styled","contactForm","onSubmit","e","contact","preventDefault","a","post","data","type","value","pattern","title","required","onChange","currentTarget","input","button","connect","state","contacts","filter","target","getContactsFromState","items","getLoadingFromState","isLoading","getExistingContacts","createSelector","normalizedFilter","toLowerCase","includes","existingContacts","ContactsList","arrayContacts","useSelector","map","id","item","text","onClick","contactId","delete","LoaderSpinner","loaderWrapper","color","height","width","App","loading","useEffect","get","length","Loader","createReducer","_","payload","isContact","some","alert","findName","error","combineReducers","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9902de37.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__xGRFs\",\"input\":\"ContactForm_input__3yj31\",\"button\":\"ContactForm_button__uz7_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactsList_button__-U71z\",\"item\":\"ContactsList_item__2smm4\",\"text\":\"ContactsList_text__Ljot2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__UHWo2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderWrapper\":\"Loader_loaderWrapper__2b8Ju\"};","import { createAction } from \"@reduxjs/toolkit\"\r\n\r\nexport const addContactsRequest = createAction(\"contacts/addRequest\")\r\nexport const addContactsSuccess = createAction(\"contacts/addSuccess\")\r\nexport const addContactsError = createAction(\"contacts/addError\")\r\n\r\nexport const getContactsRequest = createAction('contacts/getRequest');\r\nexport const getContactsSuccess = createAction('contacts/getSuccess');\r\nexport const getContactsError = createAction('contacts/getError');\r\n\r\n\r\nexport const deleteContactsRequest = createAction('contacts/deleteRequest');\r\nexport const deleteContactsSuccess = createAction('contacts/deleteSuccess');\r\nexport const deleteContactsError = createAction('contacts/deleteError');\r\n\r\nexport const changeFilter = createAction(\"contacts/changeFilter\")\r\n\r\n","import axios from 'axios';\r\n\r\nimport { getContactsRequest, getContactsSuccess, getContactsError, addContactsRequest,  addContactsSuccess,  addContactsError,  deleteContactsRequest, deleteContactsSuccess, deleteContactsError } from './contacts-actions'\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport const getContacts = () => async dispatch => {\r\n    dispatch(getContactsRequest())\r\n    try {\r\n        const { data } = await axios.get(`/contacts`)      \r\n        dispatch (getContactsSuccess(data))\r\n    } catch (error) {\r\n        dispatch(getContactsError(error))\r\n    }\r\n}\r\n\r\nexport const addContacts = contact => async dispatch => {\r\n    dispatch(addContactsRequest())\r\n    try {\r\n        const { data } = await axios.post(`/contacts`, contact)\r\n    \r\n        dispatch (addContactsSuccess(data))\r\n    } catch (error) {\r\n        dispatch(addContactsError(error))\r\n    }\r\n}\r\n\r\nexport const deleteContact = contactId => async dispatch => {\r\n    dispatch(deleteContactsRequest())\r\n    try {\r\n        await axios.delete(`/contacts/${contactId}`)      \r\n        dispatch (deleteContactsSuccess(contactId))\r\n    } catch (error) {\r\n        dispatch(deleteContactsError(error))\r\n    }\r\n}\r\n\r\n","import React, { useState } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"./ContactForm.module.css\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { addContacts } from \"../../redux/contacts/contacts-operations\"\r\n\r\nconst ContactForm = () => {\r\n  const [name, setName] = useState(\"\")\r\n  const [number, setNumber] = useState(\"\")\r\n\r\n  const handleChangeName = (e) => {\r\n    setName(e.currentTarget.value)\r\n  }\r\n\r\n  const handleChangeNumber = (e) => {\r\n    setNumber(e.currentTarget.value)\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    dispatch(addContacts({ name, number }))\r\n    setName(\"\")\r\n    setNumber(\"\")\r\n  }\r\n\r\n  return (\r\n    <form className={styled.contactForm} onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChangeName}\r\n          className={styled.input}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChangeNumber}\r\n          className={styled.input}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={styled.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n}\r\n\r\nexport default ContactForm\r\n","import PropTypes from \"prop-types\"\r\nimport styled from \"./Filter.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport {changeFilter} from \"../../redux/contacts/contacts-actions\"\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <input value={value} onChange={onChange} name=\"filter\" type=\"text\" className={styled.input}></input>\r\n  </label>\r\n)\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => dispatch(changeFilter(e.target.value)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)\r\n","import { createSelector } from \"@reduxjs/toolkit\"\r\n\r\nexport const getContactsFromState = (state) => state.contacts.items\r\nexport const getFilterFromState = (state) => state.contacts.filter\r\nexport const getLoadingFromState = (state) => state.contacts.isLoading\r\n\r\nconst existingContacts = (items, filter) => {\r\n  const normalizedFilter = filter.toLowerCase()\r\n  return items?.filter((contact) => contact.name?.toLowerCase().includes(normalizedFilter))\r\n}\r\n\r\nexport const getExistingContacts = createSelector([getContactsFromState, getFilterFromState], (items, filter) =>\r\n  existingContacts(items, filter)\r\n)\r\n","import PropTypes from \"prop-types\"\r\nimport styled from \"./ContactsList.module.css\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { deleteContact } from \"../../redux/contacts/contacts-operations\"\r\n\r\nimport { getExistingContacts } from \"../../redux/contacts/contacts-selectors\"\r\n\r\nconst ContactsList = () => {\r\n  const arrayContacts = useSelector(getExistingContacts)\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <ul>\r\n      {arrayContacts?.map(({ id, name, number }) => (\r\n        <li className={styled.item} key={id}>\r\n          <p className={styled.text}>{name}:</p>\r\n          <p className={styled.text}>{number}</p>\r\n          <button className={styled.button} onClick={() => dispatch(deleteContact(id))}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  remove: PropTypes.func,\r\n}\r\n\r\nexport default ContactsList\r\n","import Loader from \"react-loader-spinner\"\r\nimport styled from \"./Loader.module.css\"\r\n\r\nconst LoaderSpinner = () => {\r\n  return (\r\n    <div className={styled.loaderWrapper}>\r\n      <Loader type=\"ThreeDots\" color=\"#6495ed\" height={60} width={60} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoaderSpinner\r\n","import { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nimport ContactForm from \"./components/ContactForm/ContactForm\"\nimport Filter from \"./components/Filter/Filter\"\nimport ContactsList from \"./components/ContactsList/ContactsList\"\n\nimport { getContacts } from \"./redux/contacts/contacts-operations\"\nimport { getContactsFromState, getLoadingFromState } from \"./redux/contacts/contacts-selectors\"\nimport LoaderSpinner from \"./components/Loader/Loader\"\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  const contacts = useSelector(getContactsFromState)\n  const loading = useSelector(getLoadingFromState)\n\n  useEffect(() => dispatch(getContacts()), [dispatch])\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {contacts?.length ? <ContactsList /> : !loading && <h3>Your phonebook is empty</h3>}\n      {loading && <LoaderSpinner />}\n    </>\n  )\n}\n\nexport default App\n","import { createReducer } from \"@reduxjs/toolkit\"\r\nimport { combineReducers } from \"redux\"\r\nimport { getContactsRequest, getContactsSuccess, getContactsError, addContactsRequest,  addContactsSuccess,  addContactsError,  deleteContactsRequest, deleteContactsSuccess, deleteContactsError, changeFilter } from './contacts-actions'\r\n\r\nconst findName = function (contacts, payload) {\r\n  const isContact = contacts.some((item) => item.name === payload.name)\r\n  isContact && alert(`${payload.name} is already in contacts`)\r\n  return !isContact ? [...contacts, payload] : contacts\r\n}\r\n\r\nconst items = createReducer([], {\r\n  [getContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactsSuccess]: (state, { payload }) => findName(state, payload),\r\n  [deleteContactsSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n})\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n})\r\n\r\nconst isLoading = createReducer(false, {\r\n  [getContactsRequest]: () => true,\r\n  [getContactsSuccess]: () => false,\r\n  [getContactsError]: () => false,\r\n  [addContactsRequest]: () => true,\r\n  [addContactsSuccess]: () => false,\r\n  [addContactsError]: () => false,\r\n  [deleteContactsRequest]: () => true,\r\n  [deleteContactsSuccess]: () => false,\r\n  [deleteContactsError]: () => false,\r\n})\r\n\r\nconst error = createReducer(null, {\r\n  [getContactsError]: (_, { payload }) => payload,\r\n  [getContactsRequest]: () => null,\r\n  [addContactsError]: (_, { payload }) => payload,\r\n  [deleteContactsError]: (_, { payload }) => payload,\r\n})\r\n\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  isLoading,\r\n  error\r\n})\r\n","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport contactsReducer from \"./contacts/contacts-reducer\"\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n})\r\n\r\nexport default store\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\n\nimport \"./index.css\"\nimport App from \"./App\"\nimport store from \"../src/redux/store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}